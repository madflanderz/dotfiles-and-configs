{
  /*
	// Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/

  // "reactStatelessPropsAndRss": {
  //   "prefix": "rrss",
  //   "body": "import React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\n\nconst styles = {\n\tcomp: { color: 'red' },\n}\n\nconst ${1:componentName} = ({ classes }) => {\n\treturn (\n\t\t<div className={classes.comp}>...</div>\n\t)\n}\n\n${1:componentName}.propTypes = {\n\t$0\n}\n\nexport default injectSheet(styles)(${1:componentName})\n",
  //   "description": "Creates a stateless React component with PropTypes and ES6 module system"
  // },

  // "reactStatelessPropsAndRssNew": {
  //   "prefix": "rrssn",
  //   "body": [
  //     "import React from 'react'",
  //     "import PropTypes from 'prop-types'",
  //     "import injectSheet from 'react-jss'",
  //     "",
  //     "const styles = {",
  //     "\tcomp: { color: 'red' },",
  //     "}",
  //     "const ${1:componentName} = ({ classes }) => {",
  //     "\treturn (",
  //     "\t\t<div className={classes.comp}>$0</div>",
  //     "\t)}",
  //     "",
  //     "${1:componentName}.propTypes = {",
  //     "\t",
  //     "}",
  //     "",
  //     "export default injectSheet(styles)(${1:componentName})",
  //     ""
  //   ],
  //   "description": "Creates a stateless React component with PropTypes JSS"
  // },

  "reactStatelessComponent": {
    "prefix": "rrsc",
    "body": [
      "import React from 'react'",
      "import PropTypes from 'prop-types'",
      "",
      "const ${1:componentName} = ({}) => {",
      "\treturn (",
      "\t\t<div>$0</div>",
      "\t)}",
      "",
      "${1:componentName}.propTypes = {",
      "\t",
      "}",
      "",
      "export default ${1:componentName}",
      ""
    ],
    "description": "Creates a stateless React component with PropTypes"
  },

  "theme": {
    "prefix": "thm",
    "body": ["${props => props.theme.${1:property}};"],
    "description": "Styled Components theme selector"
  },

  "consoleLog": {
    "prefix": "cl",
    "body": "console.log(${1:message}) "
  },

  "exportDefault": {
    "prefix": "exp",
    "body": "export default "
  },

  "exportConst": {
    "prefix": "ec",
    "body": "export const "
  },

  "materialComp": {
    "prefix": "matC",
    "body": [
      "import * as React from 'react'",
      "import { WithStyles, withStyles, createStyles, Theme } from '@material-ui/core/styles'",
      "",
      "const styles = ({ palette }: Theme) =>",
      "  createStyles({",
      "    root: {",
      "      // backgroundColor: palette.primary,",
      "    },",
      "  })",
      "",
      "interface Props extends WithStyles<typeof styles> {",
      "  title: string",
      "}",
      "",
      "const ${1:componentName} = ({ classes }: Props) => (",
      "  <div className={classes.root}>$0</div>",
      ")",
      "",
      "export default withStyles(styles)(${1:componentName})"
    ]
  }
}
